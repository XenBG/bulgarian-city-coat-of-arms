%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 40 746 119 824 
%%LanguageLevel: 2
%%Creator: CorelDRAW
%%Title: Pomorie.eps
%%CreationDate: Wed Sep 05 10:38:47 2007
%%For: PC
%%DocumentProcessColors: Cyan Magenta Yellow 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/UseLevel 2 def
%Build: CorelDRAW Version 13.0.0.576
%Color profile:  Generic CMYK printer profile
/CorelIsEPS true def
%%BeginResource: procset wCorel3Dict 3.0 0
/wCorel3Dict 300 dict def wCorel3Dict begin
% Copyright (c)1992-2005 Corel Corporation
% All rights reserved.     v13 r0.0
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CorelIsSeps where{pop}{/CorelIsSeps false def}ifelse
/CorelIsInRIPSeps where{pop}{/CorelIsInRIPSeps false def}ifelse/CorelIsEPS
where{pop}{/CorelIsEPS false def}ifelse/CurrentInkName_5 where{pop}
{/CurrentInkName_5(Composite)def}ifelse/$ink_5 where{pop}{/$ink_5 -1 def}
ifelse/fill_color 6 array def/num_fill_inks 1 def/$o 0 def/$fil 0 def
/outl_color 6 array def/num_outl_inks 1 def/$O 0 def/$PF false def/$bkg false
def/$op false def matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def
/$stm matrix def/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve
16#6/dotaccent 16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1
}ifelse def/level2 get_ps_level 2 ge def/level3 get_ps_level 3 ge def
/is_distilling{/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse}bd/is_rip_separation{
is_distilling{false}{level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse}bd/is_current_sep_color{
is_separation{gsave false setoverprint 1 1 1 1 5 -1 roll findcmykcustomcolor 1
setcustomcolor currentgray 0 eq grestore}{pop false}ifelse}bd
/get_sep_color_index{dup length 1 sub 0 1 3 -1 roll{dup 3 -1 roll dup 3 -1 roll
get is_current_sep_color{exit}{exch pop}ifelse}for pop -1}bd/is_separation{
/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
is_rip_separation{true}{1 0 0 0 gsave setcmykcolor currentcmykcolor grestore
add add add 0 ne 0 1 0 0 gsave setcmykcolor currentcmykcolor grestore add add
add 0 ne 0 0 1 0 gsave setcmykcolor currentcmykcolor grestore add add add 0 ne
0 0 0 1 gsave setcmykcolor currentcmykcolor grestore add add add 0 ne and and
and not}ifelse}ifelse}ifelse}bind def/is_composite{is_separation not
is_distilling or}bd/is_sim_devicen{level2 level3 not and{is_distilling
is_rip_separation or}{false}ifelse}bd/@PL{/LV where{pop LV 2 ge level2 not and
{@np/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if level2{/@ssa{true setstrokeadjust}
bd}{/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c
/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N
/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}
bd/@J{@rs}bd/g{1 exch sub 0 0 0 1 null 1 set_fill_color/$fil 0 def}bd/G{1 sub
neg 0 0 0 1 null 1 set_outline_color}bd/set_fill_color{/fill_color exch def
/num_fill_inks fill_color length 6 idiv def/bFillDeviceN num_fill_inks 1 gt def
/$fil 0 def}bd/set_outline_color{/outl_color exch def/num_outl_inks outl_color
length 6 idiv def/bOutlDeviceN num_outl_inks 1 gt def}bd
/get_devicen_color_names{dup length 6 idiv dup 5 mul exch getinterval}bd
/get_devicen_color_specs{dup length 6 idiv dup 4 mul getinterval}bd
/get_devicen_color{dup length 6 idiv 0 exch getinterval}bd/mult_devicen_color{
/colorarray exch def/mult_vals exch def 0 1 mult_vals length 1 sub{colorarray
exch dup mult_vals exch get exch dup colorarray exch get 3 -1 roll mul put}for
colorarray}bd/combine_devicen_colors{/colorarray2 exch def/colorarray1 exch def
/num_inks1 colorarray1 length 6 idiv def/num_inks2 colorarray2 length 6 idiv
def/num3 0 def/colorarray3[num_inks1 num_inks2 add 6 mul{0}repeat]def 0 1
num_inks1 1 sub{colorarray1 exch get colorarray3 num3 3 -1 roll put/num3 num3 1
add def}for 0 1 num_inks2 1 sub{colorarray2 exch get colorarray3 num3 3 -1 roll
put/num3 num3 1 add def}for colorarray1 num_inks1 dup 4 mul getinterval
colorarray3 num3 3 -1 roll putinterval/num3 num3 num_inks1 4 mul add def
colorarray2 num_inks2 dup 4 mul getinterval colorarray3 num3 3 -1 roll
putinterval/num3 num3 num_inks2 4 mul add def colorarray1 num_inks1 dup 5 mul
exch getinterval colorarray3 num3 3 -1 roll putinterval/num3 num3 num_inks1 add
def colorarray2 num_inks2 dup 5 mul exch getinterval colorarray3 num3 3 -1 roll
putinterval/num3 num3 num_inks2 add def colorarray3}bd/get_devicen_color_spec{
/colorant_index exch def/colorarray exch def/ncolorants colorarray length 6
idiv def[colorarray colorant_index get colorarray ncolorants colorant_index 4
mul add 4 getinterval aload pop colorarray ncolorants 5 mul colorant_index add
get]}bd/set_devicen_color{level3{/colorarray exch def/numcolorants colorarray
length 6 idiv def colorarray get_devicen_color_specs/tint_params exch def[
/DeviceN colorarray get_devicen_color_names/DeviceCMYK{tint_params
CorelTintTransformFunction}]setcolorspace colorarray get_devicen_color aload
pop setcolor}{/DeviceCMYK setcolorspace devicen_to_cmyk aload pop pop @tc_5
setprocesscolor_5}ifelse}bd/sf{/bmp_fill_fg_color xd}bd/i{dup 0 ne{setflat}
{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld
/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm
exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd
/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp
xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}{$dsa}ifelse $SCP @ss
}if}bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge{pop}{exch pop}
ifelse}bd/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch rl neg 0 rl @cp
}bd/currentscale{1 0 dtransform matrix defaultmatrix idtransform dup mul exch
dup mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform dup mul exch
dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll eq{1 add}if}
bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1 exch sub}bd
/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}repeat pop}bd
/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1 roll sub neg
exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index .114 mul add
4 1 roll pop pop pop}bd/devicen_to_cmyk{/convertcolor exch def convertcolor
get_devicen_color aload pop convertcolor get_devicen_color_specs
CorelTintTransformFunction}bd/WaldoColor_5 where{pop}{/SetRgb/setrgbcolor ld
/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray ld/SetRgb2
systemdict/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor get def
/SetHsb systemdict/sethsbcolor get def/GetHsb systemdict/currenthsbcolor get
def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor sub 3 1 roll SetHsb
GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop/SetCmyk_5{LumSepsDict
/setcmykcolor get exec}def}{/AldusSepsDict where{pop/SetCmyk_5{AldusSepsDict
/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld}ifelse}ifelse}{
/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{pop/GetCmyk
/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse/setoverprint where
{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where{pop}{
/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1 roll
mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/findcmykcustomcolor where{pop}{
/findcmykcustomcolor{5 array astore}bd}ifelse/Corelsetcustomcolor_exists false
def/setcustomcolor where{pop/Corelsetcustomcolor_exists true def}if CorelIsSeps
true eq CorelIsInRIPSeps false eq and{/Corelsetcustomcolor_exists false def}if
Corelsetcustomcolor_exists false eq{/setcustomcolor{exch aload pop SepMode_5 0
eq{pop @tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll
5 rp 1 sub neg SetGry}ifelse}bd}if/@scc_5{dup type/booleantype eq{dup
currentoverprint ne{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse dup _ eq
{pop setprocesscolor_5 pop}{dup(CorelRegistrationColor)eq{5 rp 1 exch sub
setregcolor}{findcmykcustomcolor exch setcustomcolor}ifelse}ifelse SepMode_5 0
eq{true}{GetGry 1 eq currentoverprint and not}ifelse}bd/separate_color{
SepMode_5 0 ne{[exch/colorarray_sep exch def/ink_num -1 def colorarray_sep
length 6 idiv 1 gt{colorarray_sep get_devicen_color_names dup length 1 sub 0 1
3 -1 roll{exch dup 3 -1 roll dup 3 1 roll get CurrentInkName_5 eq{/ink_num exch
def}{pop}ifelse}for pop ink_num -1 ne{colorarray_sep ink_num
get_devicen_color_spec aload pop pop SepsColor not{pop pop pop pop 1 0 0 0 5 -1
roll}if null}{0 0 0 0 0 null}ifelse}{colorarray_sep 5 get $ink_5 4 eq{
CurrentInkName_5 eq{colorarray_sep aload pop pop SepsColor not{pop pop pop pop
0 0 0 1}if null}{0 0 0 0 0 null}ifelse}{colorarray_sep 0 get colorarray_sep
$ink_5 1 add get 3 -1 roll null eq{0 0 0 4 -1 roll SepsColor{4 $ink_5 1 add
roll}if null}{pop pop 0 0 0 0 0 null}ifelse}ifelse}ifelse]}if}bd
/separate_cmyk_color{$ink_5 -1 ne{[exch aload pop 3 $ink5 sub index
/colorarray_sep exch def/ink_num -1 def colorarray_sep get_devicen_color_names
dup length 1 sub 0 1 3 -1 roll{exch dup 3 -1 roll dup 3 1 roll get
CurrentInkName_5 eq{/ink_num exch def}{pop}ifelse}for pop ink_num -1 ne{[
colorarray_sep ink_num get_devicen_color_spec aload pop]}{[0 0 0 0 0 null]
}ifelse}if}bd/set_current_color{dup type/booleantype eq{dup currentoverprint ne
{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse/cur_color exch def
/nNumColors cur_color length 6 idiv def nNumColors 1 eq{cur_color 5 get
(CorelRegistrationColor)eq{cur_color aload pop 5 rp 1 exch sub setregcolor}{
SepMode_5 0 eq{cur_color aload pop dup null eq{pop @tc_5 setprocesscolor_5}{
findcmykcustomcolor exch setcustomcolor}ifelse}{cur_color separate_color aload
pop pop @tc_5 setprocesscolor_5}ifelse}ifelse}{SepMode_5 0 eq{is_distilling
is_rip_separation or{cur_color set_devicen_color}{cur_color devicen_to_cmyk
setprocesscolor_5}ifelse}{cur_color separate_color aload pop pop @tc_5
setprocesscolor_5}ifelse}ifelse SepMode_5 0 eq{true}{GetGry 1 eq
currentoverprint and not}ifelse}bd/colorimage where{pop/ColorImage{colorimage}
def}{/ColorImage{/ncolors xd/$multi xd $multi true eq{ncolors 3 eq{/daqB xd
/daqG xd/daqR xd pop pop exch pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK
xd/daqY xd/daqM xd/daqC xd pop pop exch pop abs{daqC pop daqM pop daqY pop daqK
pop}repeat}ifelse}{/dataaq xd{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length
3 div 1 sub{dup 3 mul $dat 1 index get 255 div $dat 2 index 1 add get 255 div
$dat 3 index 2 add get 255 div rgb2g 255 mul cvi exch pop $dat 3 1 roll put}
for $dat 0 $dat length 3 idiv getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4
div 1 sub{dup 4 mul $dat 1 index get 255 div $dat 2 index 1 add get 255 div
$dat 3 index 2 add get 255 div $dat 4 index 3 add get 255 div cmyk2rgb rgb2g
255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length ncolors idiv
getinterval}if}ifelse}image}ifelse}bd}ifelse/setcmykcolor{1 5 1 roll null 6
array astore currentoverprint set_current_color/$ffpnt xd}bd/currentcmykcolor{
GetCmyk}bd/setrgbcolor{rgb2cmyk setcmykcolor}bd/currentrgbcolor{
currentcmykcolor cmyk2rgb}bd/sethsbcolor{hsb2rgb setrgbcolor}bd
/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def/$fm 0 def
/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d fill_color $o set_current_color pop $ctm setmatrix
72 1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{CorelPtrnDoFill}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{level3{fill_color $o
set_current_color{wfill}{@np}ifelse}{/overprint_flag $o def is_distilling
is_rip_separation or{0 1 num_fill_inks 1 sub{dup 0 gt{/overprint_flag true def
}if fill_color exch get_devicen_color_spec overprint_flag set_current_color{
@gs wfill @gr}{@np exit}ifelse}for}{fill_color overprint_flag set_current_color
{@gs wfill @gr}{@np exit}ifelse}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{$dsf
$dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm setmatrix
$SDF{$SCF $SCA $SCP @ss}if level3{outl_color $O set_current_color{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}{/overprint_flag $O def
is_distilling is_rip_separation or{0 1 num_outl_inks 1 sub{dup 0 gt{
/overprint_flag true def}if outl_color exch get_devicen_color_spec
overprint_flag set_current_color{matrix currentmatrix $ptm concat @gs stroke
@gr setmatrix}{@np exit}ifelse}for}{outl_color overprint_flag set_current_color
{matrix currentmatrix $ptm concat @gs stroke @gr setmatrix}{@np exit}ifelse
}ifelse}ifelse $SDF{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S
}bd/b{@cp B}bd/_E{5 array astore exch cvlit xd}bd/@cc{currentfile $dat
readhexstring pop}bd/@sm{/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd
/Bblly xd/Bbllx xd}bd/@c{@cp}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore
/$Prm xd}bd/tcc{@cc}def/@B{@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5
(Composite)eq{/$ink_5 -1 def}{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{
CurrentInkName_5(Magenta)eq{/$ink_5 1 def}{CurrentInkName_5(Yellow)eq{/$ink_5 2
def}{CurrentInkName_5(Black)eq{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}
ifelse}ifelse}ifelse}bd/@whi{@gs -72000 dup m -72000 72000 l 72000 dup l 72000
-72000 l @cp 1 SetGry fill @gr}bd/@neg{[{1 exch sub}/exec cvx currenttransfer
/exec cvx]cvx settransfer @whi}bd/deflevel 0 def/@sax{/deflevel deflevel 1 add
def}bd/@eax{/deflevel deflevel dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{
eax}ifelse}bd/eax{{exec}forall}bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict
/pdfmark known not{/pdfmark/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}
ifelse}bd level2{/setregcolor{/neg_flag exch def[/Separation/All/DeviceCMYK{
dup dup dup}]setcolorspace 1.0 neg_flag sub setcolor}bd}{/setregcolor{1 exch
sub dup dup dup setcmykcolor}bd}ifelse/CorelTintTransformFunction{
/colorantSpecArray exch def/nColorants colorantSpecArray length 4 idiv def
/inColor nColorants 1 add 1 roll nColorants array astore def/outColor 4 array
def 0 1 3{/nOutInk exch def 1 0 1 nColorants 1 sub{dup inColor exch get exch 4
mul nOutInk add colorantSpecArray exch get mul 1 exch sub mul}for 1 exch sub
outColor nOutInk 3 -1 roll put}for outColor aload pop}bind def
% Copyright (c)1992-2005 Corel Corporation
% All rights reserved.     v13 r0.0
/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/@i{@sm @gs @ii 6 index 1 ne{/$frg true
def pop pop}{1 eq{bmp_fill_fg_color $O set_current_color/$frg xd}{/$frg false
def}ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd/$lly xd
/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi string
def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub $ury
$lly sub scale $bkg{fill_color set_current_color pop}if $wid $hei abs $bts 1 eq
{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts
1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi string def $msimage false eq
$ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi
$ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string
def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def/bImgDeviceN false def/nNumInksDeviceN 0 def
/sNamesDeviceN[]def/tint_params[]def level2{/@I_2{@sm @gs @ii @np/$ury xd/$urx
xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul
8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}
{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly
sub scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0
1 0 1 0 1 0 1]}ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt
{$hei}{0}ifelse]def/DataSource currentfile/ASCII85Decode filter COMP 1 eq
{/DCTDecode filter}{COMP 2 eq{/RunLengthDecode filter}if}ifelse def currentdict
end image $SDF{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse
level2{/@I_2D{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd
/$hei xd/$wid xd $ngx/scanline $wid $bts mul $ncl mul 8 div ceiling cvi string
def/readscanline{currentfile scanline readhexstring pop}bind def level3{[
/DeviceN sNamesDeviceN/DeviceCMYK{tint_params CorelTintTransformFunction}]
setcolorspace $llx $lly Tl $urx $llx sub $ury $lly sub scale 8 dict begin
/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def
/Decode[nNumInksDeviceN{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0
gt{$hei}{0}ifelse]def/DataSource{readscanline}def currentdict end image}{
/scanline_height $lly $ury sub 1 sub $hei div def/plate_scanline $wid string
def/cmyk_scanline $wid 4 mul string def is_distilling is_rip_separation or{
/bSimDeviceN true def}{/bSimDeviceN false def}ifelse/scanline_img_dict 8 dict
begin/ImageType 1 def/Width $wid def/Height 1 def/BitsPerComponent $bts def
/Decode bSimDeviceN{[0 1]}{[0 1 0 1 0 1 0 1]}ifelse def/ImageMatrix[$wid 0 0 1
neg 0 1]def/DataSource bSimDeviceN{plate_scanline}{cmyk_scanline}ifelse def
currentdict end def 0 1 $hei 1 sub{@gs/nScanIndex exch def readscanline pop
/$t_lly $ury $lly scanline_height nScanIndex mul sub sub ceiling cvi def
/$t_ury $t_lly scanline_height sub ceiling cvi def bSimDeviceN{0 1 $ncl 1 sub{
@gs/nInkIndex exch def 0 1 plate_scanline length 1 sub{dup $ncl mul nInkIndex
add scanline exch get plate_scanline 3 1 roll put}for[0 1 $ncl 1 sub{nInkIndex
eq{1.0}{0.0}ifelse}for]/sepTintTransformParams exch def[/Separation
sNamesDeviceN nInkIndex get/DeviceCMYK{sepTintTransformParams aload pop
tint_params CorelTintTransformFunction @tc_5}]setcolorspace $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale nInkIndex 0 eq currentoverprint not and{false
setoverprint}{true setoverprint}ifelse scanline_img_dict image @gr}for}{0 1
$wid 1 sub{dup $ncl mul scanline exch $ncl getinterval 0 1 $ncl 1 sub{2 copy
get 255 div 3 1 roll pop}for pop tint_params CorelTintTransformFunction 5 -1
roll cmyk_scanline exch 0 1 3{3 1 roll 2 copy 5 -1 roll dup 8 exch sub index
255 mul cvi 3 1 roll exch 4 mul add exch put}for 6 rp}for/DeviceCMYK
setcolorspace $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale
scanline_img_dict image}ifelse @gr}for}ifelse $SDF{$dsf $dsa $dsp @ss}if @gr
$ctm setmatrix}bd}{/@I_2D{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury xd/$urx xd/$lly
xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi string def $ngx bImgDeviceN{[/DeviceN sNamesDeviceN/DeviceCMYK{
tint_params CorelTintTransformFunction}]}{$ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse}ifelse setcolorspace $llx $lly Tl $urx
$llx sub $ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin
/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def
/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}
ifelse]def/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode
filter}{COMP 2 eq{/RunLengthDecode filter}if}ifelse def end/MaskedImageDict 7
dict def MaskedImageDict begin/ImageType 3 def/InterleaveType 3 def/MaskDict
ImageMaskDict def/DataDict ImageDataDict def end MaskedImageDict image $SDF
{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid
xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def/Width $mwid def
/Height $mhei abs def/BitsPerComponent $mbts def/DataSource maskstream def
/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]
def end}bd/@daq{dup type/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq
MaskedImage true eq and{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq
UseLevel 3 eq or and{7 -2 roll pop pop bImgDeviceN{@I_2D}{@I_2}ifelse}{11 index
1 eq{12 -1 roll pop @i}{7 -2 roll pop pop @I}ifelse}ifelse}ifelse}bd
/disable_raster_output{/@BMP load/old_raster_func exch bind def/@BMP{8 rp/$ury
xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/scanline $wid $bts
mul $ncl mul 8 div ceiling cvi string def 0 1 $hei 1 sub{currentfile scanline
readhexstring pop pop pop}for}def}bd/enable_raster_output{/old_raster_func
where{pop/old_raster_func load/@BMP exch bd}if}bd
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel3Dict begin
@BeginSysCorelDict
@ssa
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 0 1 1 0
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
50.79373 755.44328 104.01477 816.07153 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 1.00 1.00 0.00 0.00 null ] set_fill_color
64.24781 772.90554 m
59.86176 768.49455 L
55.47572 764.08356 L
64.24781 764.08356 L
73.02019 764.08356 L
68.63414 768.49455 L
64.24781 772.90554 L
@c
53.86706 790.19518 m
53.86706 790.19518 L
54.18085 787.88268 56.16227 786.08466 58.54025 786.08466 C
76.44019 786.08466 L
76.44302 786.08466 L
76.46088 807.93694 L
53.86706 807.93694 L
53.86706 790.19518 L
@c
55.41619 809.24939 m
74.63594 809.24939 L
75.77802 812.63367 L
76.93852 816.07153 L
78.09817 812.63367 L
79.24025 809.24939 L
99.39231 809.24939 L
100.53439 812.63367 L
101.69461 816.07153 L
102.85455 812.63367 L
104.01477 809.22387 L
102.14816 809.22387 L
102.14816 760.39228 L
102.14816 757.67017 99.92126 755.44328 97.19915 755.44328 C
57.60879 755.44328 L
54.88668 755.44328 52.66006 757.67017 52.66006 760.39200 C
52.66006 809.22387 L
50.79373 809.22387 L
51.95395 812.63367 L
53.11446 816.07153 L
54.27411 812.63367 L
55.41619 809.24939 L
@c
100.94117 787.23269 m
100.94117 761.46350 L
100.94117 758.87405 98.82283 756.75572 96.23339 756.75572 C
77.12844 756.75572 L
77.12844 778.56491 L
53.86706 778.56491 L
53.86706 787.22929 L
54.71405 785.84485 56.26630 784.91169 58.03030 784.91169 C
96.77764 784.91169 L
98.54306 784.91169 100.09446 785.84627 100.94117 787.23269 C
100.94117 787.23269 L
@c
89.44356 801.99638 m
89.99943 801.96775 L
90.54000 801.88441 L
91.06186 801.74976 L
91.56302 801.56608 L
92.03953 801.33591 L
92.48910 801.06236 L
92.90920 800.74743 L
93.29726 800.39537 L
93.64932 800.00759 L
93.96397 799.58750 L
94.23751 799.13764 L
94.46797 798.66142 L
94.65165 798.16025 L
94.78630 797.63839 L
94.86935 797.09754 L
94.89798 796.54167 L
94.86935 795.98523 L
94.78630 795.44466 L
94.65165 794.92224 L
94.46797 794.42192 L
94.23751 793.94485 L
93.96397 793.49528 L
93.64932 793.07490 L
93.29726 792.68769 L
92.90920 792.33506 L
92.48910 792.02041 L
92.03953 791.74658 L
91.56302 791.51669 L
91.06186 791.33301 L
90.54000 791.19836 L
89.99943 791.11531 L
89.44356 791.08724 L
88.88683 791.11531 L
88.34627 791.19836 L
87.82384 791.33301 L
87.32353 791.51669 L
86.84646 791.74658 L
86.39688 792.02041 L
85.97650 792.33506 L
85.58957 792.68769 L
85.23666 793.07490 L
84.92230 793.49528 L
84.64847 793.94485 L
84.41858 794.42192 L
84.23461 794.92224 L
84.10025 795.44466 L
84.01691 795.98523 L
83.98885 796.54167 L
84.01691 797.09754 L
84.10025 797.63839 L
84.23461 798.16025 L
84.41858 798.66142 L
84.64847 799.13764 L
84.92230 799.58750 L
85.23666 800.00759 L
85.58957 800.39537 L
85.97650 800.74743 L
86.39688 801.06236 L
86.84646 801.33591 L
87.32353 801.56608 L
87.82384 801.74976 L
88.34627 801.88441 L
88.88683 801.96775 L
89.44356 801.99638 L
@c
92.15631 801.92891 m
94.41694 805.87757 L
96.35216 805.93824 L
96.69231 805.12101 L
93.44324 801.05244 L
93.08891 801.33874 L
92.82643 801.52838 L
92.55373 801.70384 L
92.15631 801.92891 L
@c
93.87950 800.62384 m
101.11209 806.23502 L
101.11209 803.06872 L
94.67433 799.54299 L
94.58022 799.69351 94.48554 799.84346 94.38633 799.98775 C
94.30724 800.09915 94.22532 800.20743 94.14227 800.31317 C
93.87950 800.62384 L
@c
94.96148 798.97805 m
101.11209 801.67550 L
101.11209 798.03071 L
95.36910 797.67808 L
95.27868 798.06217 L
95.20101 798.33402 L
95.15707 798.46894 95.11058 798.60104 95.06126 798.73172 C
94.96148 798.97805 L
@c
95.43458 797.25373 m
101.11209 797.56441 L
101.11209 794.72494 L
95.42041 795.72246 L
95.45017 796.01556 L
95.46661 796.21625 95.47569 796.41553 95.47370 796.61424 C
95.47115 796.75994 95.46293 796.90620 95.45244 797.04935 C
95.43458 797.25373 L
@c
95.29455 795.07162 m
101.11209 792.96945 L
101.11209 790.56170 L
94.81635 793.80198 L
94.98302 794.16255 L
95.03546 794.28898 95.08535 794.41710 95.13184 794.54466 C
95.21773 794.80630 L
95.29455 795.07162 L
@c
94.53940 793.31669 m
100.21436 789.53329 L
98.11587 786.11556 L
93.23405 791.85345 L
93.49087 792.07880 L
93.64677 792.22535 L
93.79729 792.37701 L
93.94243 792.53433 L
94.08217 792.69647 L
94.21625 792.86343 L
94.34409 793.03521 L
94.53940 793.31669 L
@c
92.92450 791.61846 m
96.67871 786.20485 L
93.63090 786.20485 L
91.64636 790.92595 L
91.90233 791.03679 L
92.17361 791.16690 L
92.43780 791.30976 L
92.69376 791.46624 L
92.92450 791.61846 L
@c
90.55219 790.61159 m
90.91389 786.20485 L
89.20063 786.20485 L
89.33471 790.51011 L
89.70123 790.51635 L
89.81972 790.52230 89.93962 790.53165 90.06066 790.54243 C
90.29764 790.57191 L
90.55219 790.61159 L
@c
88.42195 790.59600 m
88.00639 786.20485 L
84.64280 786.20485 L
86.79713 791.12239 L
87.08173 790.99455 L
87.24983 790.92567 L
87.42047 790.86161 L
87.76885 790.74879 L
87.94630 790.70031 L
88.12602 790.65723 L
88.42195 790.59600 L
@c
85.90365 791.66239 m
81.29112 786.20485 L
77.21830 786.20485 L
84.87014 792.61597 L
85.14992 792.31493 L
85.35685 792.11480 L
85.57228 791.92431 L
85.68369 791.83304 L
85.90365 791.66239 L
@c
84.50447 793.08595 m
80.34520 790.22863 L
78.58970 791.39906 L
83.96759 794.01600 L
84.11783 793.71780 L
84.19833 793.56841 84.28535 793.42044 84.37720 793.27672 C
84.50447 793.08595 L
@c
83.75613 794.53446 m
77.44195 792.36794 L
77.44195 794.93131 L
83.44942 795.85852 L
83.51206 795.45402 L
83.56819 795.18302 L
83.59994 795.05008 83.63622 794.91770 83.67506 794.78504 C
83.75613 794.53446 L
@c
83.41569 796.76646 m
79.89959 796.74661 L
79.28419 797.42324 L
79.01178 798.58091 L
83.57357 797.93603 L
83.50243 797.57660 L
83.47096 797.38639 83.44715 797.19704 83.43043 797.00287 C
83.41569 796.76646 L
@c
83.65493 798.23849 m
79.96479 799.43669 L
79.55943 800.71994 L
81.32173 800.71994 L
84.01181 799.16031 L
83.88794 798.88450 L
83.82926 798.74306 83.77398 798.59707 83.72296 798.44967 C
83.65493 798.23849 L
@c
79.11950 806.82520 m
85.13717 800.75906 L
84.90926 800.50961 L
84.81713 800.40302 84.72671 800.29276 84.63827 800.17880 C
84.43616 799.90101 L
77.44195 805.02123 L
77.44195 806.76312 L
79.11950 806.82520 L
@c
84.31285 807.76630 m
86.76935 801.94706 L
86.41162 801.75033 L
86.16614 801.59868 L
86.04737 801.51931 85.92945 801.43625 85.81209 801.34951 C
85.59638 801.18255 L
80.47106 807.76630 L
84.31285 807.76630 L
@c
90.46715 807.76630 m
90.13975 802.53468 L
89.97902 802.54800 89.81575 802.56246 89.65587 802.56813 C
89.51017 802.57323 89.37014 802.57238 89.22416 802.56813 C
89.08044 802.56161 88.93644 802.55055 88.79102 802.53666 C
88.45143 802.49244 L
87.68665 807.76630 L
90.46715 807.76630 L
@c
91.38813 807.76630 m
93.84463 807.76630 L
91.73452 802.12195 L
91.37310 802.25376 L
91.25093 802.29373 91.12706 802.33172 91.00431 802.36573 C
90.83820 802.40882 90.67209 802.44539 90.50598 802.48110 C
91.38813 807.76630 L
@c
F

@rax %Note: Object
57.54019 788.64463 72.15080 806.91732 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 1.00 1.00 0.00 null ] set_fill_color
59.73194 803.25524 m
60.93921 803.25524 61.92340 802.27077 61.92340 801.06350 c
61.92340 799.85650 60.93921 798.87203 59.73194 798.87203 c
58.52466 798.87203 57.54019 799.85650 57.54019 801.06350 c
57.54019 802.27077 58.52466 803.25524 59.73194 803.25524 c
@c
62.28879 798.14154 m
63.49606 798.14154 64.48025 797.15707 64.48025 795.94980 c
64.48025 794.74280 63.49606 793.75833 62.28879 793.75833 c
61.08151 793.75833 60.09704 794.74280 60.09704 795.94980 c
60.09704 797.15707 61.08151 798.14154 62.28879 798.14154 c
@c
64.84564 803.25524 m
66.05291 803.25524 67.03710 802.27077 67.03710 801.06350 c
67.03710 799.85650 66.05291 798.87203 64.84564 798.87203 c
63.63836 798.87203 62.65389 799.85650 62.65389 801.06350 c
62.65389 802.27077 63.63836 803.25524 64.84564 803.25524 c
@c
67.40249 798.14154 m
68.60976 798.14154 69.59395 797.15707 69.59395 795.94980 c
69.59395 794.74280 68.60976 793.75833 67.40249 793.75833 c
66.19521 793.75833 65.21074 794.74280 65.21074 795.94980 c
65.21074 797.15707 66.19521 798.14154 67.40249 798.14154 c
@c
64.84564 793.02784 m
66.05291 793.02784 67.03710 792.04337 67.03710 790.83609 c
67.03710 789.62910 66.05291 788.64463 64.84564 788.64463 c
63.63836 788.64463 62.65389 789.62910 62.65389 790.83609 c
62.65389 792.04337 63.63836 793.02784 64.84564 793.02784 c
@c
69.95934 803.25524 m
71.16661 803.25524 72.15080 802.27077 72.15080 801.06350 c
72.15080 799.85650 71.16661 798.87203 69.95934 798.87203 c
68.75206 798.87203 67.76759 799.85650 67.76759 801.06350 c
67.76759 802.27077 68.75206 803.25524 69.95934 803.25524 c
@c
64.37395 806.91732 m
65.31732 806.91732 L
65.31732 803.92110 L
64.37395 803.92110 L
64.37395 806.91732 L
@c
F

@rax %Note: Object
77.56980 786.33269 100.98425 807.63846 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 1.00 0.00 null ] set_fill_color
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 0.00 null ] set_outline_color
0 0.21600 0.21600 0.00000 @w
89.44356 801.86825 m
92.37713 801.86825 94.76986 799.47553 94.76986 796.54167 c
94.76986 793.60809 92.37713 791.21537 89.44356 791.21537 c
86.50970 791.21537 84.11698 793.60809 84.11698 796.54167 c
84.11698 799.47553 86.50970 801.86825 89.44356 801.86825 c
@c
92.33150 801.97795 m
94.49263 805.75200 L
96.26797 805.80756 L
96.54548 805.14170 L
93.42425 801.23357 L
93.08863 801.51874 92.72296 801.76876 92.33150 801.97795 C
@c
94.06375 800.60513 m
100.98425 805.97395 L
100.98425 803.14441 L
94.71883 799.71307 L
94.52693 800.03055 94.30753 800.32819 94.06375 800.60513 C
@c
95.12674 798.91087 m
100.98425 801.47991 L
100.98425 798.15061 L
95.46945 797.81216 L
95.38923 798.19228 95.27386 798.55994 95.12674 798.91087 C
@c
95.57320 797.13326 m
100.98425 797.42948 L
100.98425 794.87717 L
95.55987 795.82791 L
95.58737 796.06233 95.60211 796.30016 95.60211 796.54167 C
95.60211 796.74123 95.59191 796.93852 95.57320 797.13326 C
@c
95.37959 794.90494 m
100.98425 792.87987 L
100.98425 790.77146 L
94.98444 793.85924 L
95.14658 794.19260 95.27896 794.54239 95.37959 794.90494 C
@c
94.57285 793.14094 m
100.04088 789.49531 L
98.09887 786.33269 L
93.41291 791.84041 L
93.85767 792.21685 94.24913 792.65452 94.57285 793.14094 C
@c
92.89077 791.44299 m
96.43436 786.33269 L
93.71565 786.33269 L
91.81332 790.85906 L
92.19317 791.01836 92.55402 791.21424 92.89077 791.44299 C
@c
90.43597 790.46419 m
90.77499 786.33269 L
89.33244 786.33269 L
89.45887 790.38340 L
89.79109 790.38397 90.11764 790.41203 90.43597 790.46419 C
@c
88.28391 790.49395 m
87.88989 786.33269 L
84.83839 786.33269 L
86.86261 790.95288 L
87.31020 790.74539 87.78671 790.58948 88.28391 790.49395 C
@c
85.71997 791.64312 m
81.23187 786.33269 L
77.56980 786.33269 L
84.85824 792.43937 L
85.11959 792.14769 85.40787 791.88094 85.71997 791.64312 C
@c
84.32787 793.11997 m
80.34406 790.38312 L
78.84595 791.38176 L
83.90976 793.84564 L
84.03307 793.59364 84.17254 793.35099 84.32787 793.11997 C
@c
83.59569 794.61468 m
77.56980 792.54680 L
77.56980 794.82161 L
83.34142 795.71254 L
83.39301 795.33524 83.47861 794.96759 83.59569 794.61468 C
@c
83.29550 796.89345 m
79.95572 796.87474 L
79.40098 797.48504 L
79.17902 798.42813 L
83.42107 797.82831 L
83.35616 797.52444 83.31364 797.21206 83.29550 796.89345 C
@c
83.57272 798.39950 m
80.06683 799.53789 L
79.73376 800.59209 L
81.28743 800.59209 L
83.84740 799.10787 L
83.74167 798.87855 83.64983 798.64243 83.57272 798.39950 C
@c
79.06791 806.69537 m
77.56980 806.63981 L
77.56980 805.08614 L
84.40781 800.08016 L
84.57591 800.31883 84.76072 800.54362 84.96028 800.75594 C
79.06791 806.69537 L
@c
84.22809 807.63846 m
80.73241 807.63846 L
85.61906 801.36198 L
85.92576 801.60605 86.25628 801.82120 86.60636 802.00431 C
84.22809 807.63846 L
@c
90.33109 807.63846 m
87.83433 807.63846 L
88.55972 802.63587 L
88.84857 802.67783 89.14337 802.70050 89.44356 802.70050 C
89.63773 802.70050 89.83049 802.69058 90.02041 802.67272 C
90.33109 807.63846 L
@c
91.49641 807.63846 m
90.65225 802.58031 L
90.99921 802.51058 91.33569 802.41165 91.65940 802.28608 C
93.66038 807.63846 L
91.49641 807.63846 L
@c
B

@rax %Note: Object
55.22315 778.95354 99.07002 783.78066 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 1.00 1.00 0.00 0.00 null ] set_fill_color
95.41984 779.03291 m
95.41984 783.69846 L
98.92403 783.69846 L
98.92403 783.14769 L
96.24813 783.14769 L
96.24813 781.71902 L
98.68932 781.71902 L
98.68932 781.17165 L
96.24813 781.17165 L
96.24813 779.58369 L
99.07002 779.58369 L
99.07002 779.03291 L
95.41984 779.03291 L
@c
89.05521 783.69846 m
89.80611 783.69846 L
89.80611 780.00406 L
93.13767 783.69846 L
93.97162 783.69846 L
93.97162 779.03291 L
93.21902 779.03291 L
93.21902 782.71852 L
89.88321 779.03291 L
89.05521 779.03291 L
89.05521 783.69846 L
@c
84.15780 779.03291 m
84.15780 783.69846 L
86.04312 783.69846 l
86.37506 783.69846 86.62847 783.68117 86.80309 783.65367 C
87.04828 783.61455 87.25521 783.54227 87.42104 783.43540 c
87.58602 783.32910 87.72151 783.17717 87.82157 782.98583 c
87.92192 782.79364 87.97266 782.32479 87.97266 782.09348 c
87.97266 781.69720 87.83717 781.35846 87.56787 781.08548 C
87.29830 780.81222 86.80592 780.67389 86.10151 780.67389 c
84.81883 780.67389 L
84.81883 779.03291 L
84.15780 779.03291 L
@c
84.81883 781.22438 m
86.11200 781.22438 l
86.53918 781.22438 86.84277 781.29836 87.02192 781.44718 c
87.20107 781.59572 87.29065 781.80463 87.29065 782.07392 c
87.29065 782.26923 87.23792 782.69272 87.13247 782.83134 c
87.02674 782.97024 86.88813 783.06293 86.71493 783.10630 c
86.60353 783.13408 86.39773 783.14769 86.09811 783.14769 c
84.81883 783.14769 L
84.81883 781.22438 L
@c
77.02838 781.30545 m
77.02838 782.07987 77.29512 782.68592 77.83002 783.12359 c
78.36463 783.56126 79.05402 783.78066 79.89987 783.78066 c
80.45263 783.78066 80.95238 783.67776 81.39600 783.47225 C
81.84019 783.26589 82.17921 782.97902 82.41250 782.61080 C
82.64551 782.24372 82.76145 781.82532 82.76145 781.35959 c
82.76145 780.88620 82.63984 780.46243 82.39436 780.08995 C
82.14888 779.71606 81.80107 779.43373 81.35150 779.24154 C
80.90079 779.04935 80.41635 778.95354 79.89562 778.95354 c
79.33068 778.95354 78.82639 779.05899 78.38249 779.27187 C
77.93745 779.48362 77.60069 779.77361 77.37165 780.14069 C
77.14261 780.50693 77.02838 780.89584 77.02838 781.30545 c
@c
77.84646 781.29553 m
77.84646 780.73285 78.04006 780.29093 78.42841 779.96721 C
78.81789 779.64350 79.30517 779.48164 79.89137 779.48164 c
80.48920 779.48164 80.98016 779.64435 81.36595 779.97146 c
81.75118 780.29830 81.94507 780.76205 81.94507 781.36299 c
81.94507 781.74198 81.86145 782.07335 81.69619 782.35682 C
81.53150 782.64028 81.29027 782.85969 80.97335 783.01616 C
80.65474 783.17150 80.29899 783.24973 79.90413 783.24973 c
79.34202 783.24973 78.85871 783.09978 78.45392 782.79874 C
78.04913 782.49883 77.84646 781.99739 77.84646 781.29553 c
@c
69.12935 779.03291 m
69.12935 783.69846 L
70.37717 783.69846 L
71.85855 780.39496 L
71.99575 780.08769 72.09609 779.85723 72.15732 779.70416 C
72.22876 779.87367 72.33959 780.12340 72.49124 780.45279 C
73.98992 783.69846 L
75.10535 783.69846 L
75.10535 779.03291 L
74.30627 779.03291 L
74.30627 782.68224 L
72.48699 779.03291 L
71.73893 779.03291 L
69.92816 782.74857 L
69.92816 779.03291 L
69.12935 779.03291 L
@c
62.81405 781.29553 m
62.81405 780.73285 63.00907 780.29093 63.39969 779.96721 C
63.79143 779.64350 64.28154 779.48164 64.87143 779.48164 c
65.47266 779.48164 65.96702 779.64435 66.35452 779.97146 c
66.74202 780.29830 66.93761 780.76205 66.93761 781.36299 c
66.93761 781.74198 66.85313 782.07335 66.68731 782.35682 c
66.52148 782.64028 66.27883 782.85969 65.96022 783.01616 C
65.63991 783.17150 65.28132 783.24973 64.88419 783.24973 c
64.31811 783.24973 63.83225 783.09978 63.42520 782.79874 C
63.01814 782.49883 62.81405 781.99739 62.81405 781.29553 c
@c
61.99087 781.30545 m
61.99087 782.07987 62.25931 782.68592 62.79732 783.12359 C
63.33506 783.56126 64.02841 783.78066 64.87994 783.78066 c
65.43581 783.78066 65.93868 783.67776 66.38542 783.47225 C
66.83187 783.26589 67.17317 782.97902 67.40787 782.61080 c
67.64230 782.24372 67.75909 781.82532 67.75909 781.35959 c
67.75909 780.88620 67.63663 780.46243 67.38973 780.08995 C
67.14255 779.71606 66.79276 779.43373 66.34035 779.24154 C
65.88680 779.04935 65.39981 778.95354 64.87569 778.95354 c
64.30734 778.95354 63.79994 779.05899 63.35320 779.27187 C
62.90561 779.48362 62.56687 779.77361 62.33641 780.14069 C
62.10595 780.50693 61.99087 780.89584 61.99087 781.30545 c
@c
55.23052 783.69846 m
61.01631 783.69591 L
61.01631 783.14258 L
60.27080 783.14287 L
60.27080 779.03291 L
59.54712 779.03291 L
59.54712 783.14769 L
56.71644 783.14769 L
56.71644 779.03291 L
55.99757 779.03291 L
55.99757 783.12728 L
55.22315 783.14258 L
55.23052 783.69846 L
@c
F

@rax %Note: Object
81.81808 761.30816 87.47235 763.75786 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 1.00 0.00 0.00 0.00 null ] set_fill_color
87.47121 763.17052 m
87.45250 763.13282 85.65959 762.96501 84.73748 763.02369 c
83.81537 763.08236 81.81808 763.75786 81.81808 763.75786 C
81.81808 763.75786 82.85443 761.55279 84.31427 761.33509 C
85.38463 761.06608 87.55285 762.87146 87.47121 763.17052 C
@c
F

@rax %Note: Object
91.39635 760.79962 97.05061 763.24932 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 1.00 0.00 0.00 0.00 null ] set_fill_color
97.04948 762.66198 m
97.03077 762.62428 95.23786 762.45647 94.31575 762.51515 c
93.39364 762.57383 91.39635 763.24932 91.39635 763.24932 C
91.39635 763.24932 92.43269 761.04425 93.89254 760.82655 C
94.96290 760.55754 97.13112 762.36293 97.04948 762.66198 C
@c
F

@rax %Note: Object
86.78041 758.33518 92.43468 760.78488 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 1.00 0.00 0.00 0.00 null ] set_fill_color
92.43354 760.19754 m
92.41483 760.15984 90.62192 759.99203 89.69981 760.05071 c
88.77770 760.10939 86.78041 760.78488 86.78041 760.78488 C
86.78041 760.78488 87.81676 758.57981 89.27660 758.36211 C
90.34696 758.09310 92.51518 759.89849 92.43354 760.19754 C
@c
F

@rax %Note: Object
83.97950 764.39906 96.54236 776.44800 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.60 1.00 0.00 null ] set_fill_color
96.54236 764.39906 m
88.13820 764.39906 L
88.13820 764.39906 88.56510 765.03742 89.25647 765.19672 c
89.94784 765.35631 89.68195 765.67550 90.10743 765.83509 c
90.53291 765.99468 91.59647 765.88809 91.59647 765.88809 C
91.59647 765.88809 91.80907 766.68576 91.22428 767.16454 c
90.63921 767.64302 90.32003 768.06850 90.32003 768.06850 C
90.32003 768.06850 89.25647 767.90920 88.99058 768.17509 c
88.72469 768.44098 88.51181 769.02576 88.51181 769.02576 C
87.92702 769.07906 L
87.92702 769.07906 87.44825 767.69631 87.18236 767.43043 c
86.91647 767.16454 84.57647 764.08016 84.04469 764.55865 c
83.51291 765.03742 86.38469 767.74961 86.27839 768.33439 c
86.17209 768.91946 86.22510 769.23865 86.22510 769.23865 C
86.22510 769.23865 87.92702 772.64220 88.40551 772.64220 c
88.88428 772.64220 89.04387 772.42961 89.41606 772.53591 c
89.78825 772.64220 89.94784 772.80180 90.21373 772.74850 c
90.47962 772.69550 91.75606 771.73824 93.08551 770.19591 c
94.41496 768.65357 94.09606 767.64302 94.46825 767.32413 c
94.84044 767.00494 95.31921 766.89865 95.79770 766.04769 C
96.27647 765.19672 96.54236 764.39906 96.54236 764.39906 C
@c
88.96365 776.20564 m
89.33584 775.62057 87.98003 772.42961 86.38469 772.80180 c
84.78935 773.17398 85.05524 774.87591 85.16154 775.19480 c
85.26784 775.51398 85.64003 776.25865 86.27839 776.31165 C
86.99187 776.47833 89.18957 776.54381 88.96365 776.20564 C
@c
F

@rax %Note: Object
40.47137 746.29531 118.05080 823.06942 @E
/$fm 0 def
40.47137 823.06942 m
118.05080 823.06942 L
118.05080 746.29531 L
40.47137 746.29531 L
40.47137 823.06942 L
@c
N

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel3Dict 3.0 0
%%EOF
